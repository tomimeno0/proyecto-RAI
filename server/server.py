from flask import Flask, request, jsonify
import cohere
import os

# Tu clave API de Cohere (lo ideal es usar variables de entorno)
cohere_api_key = "NoDkh6iQtPSLALt4S9QoOKSpfaKnhv2zwyPGjbMU"  # Aseg√∫rate de no exponer tu clave API en el c√≥digo fuente

client = cohere.Client(cohere_api_key)
app = Flask(__name__)

@app.route('/orden', methods=['POST'])
def procesar_orden():
    data = request.get_json()
    orden = data.get('command', '')
    print(f"üì• Orden recibida: {orden}")

    try:
        response = client.chat(message=orden, preamble="Tu nombre es RAI (Reactive Artificial Intelligence), una IA avanzada instalada localmente que ejecuta directamente las acciones en la computadora del usuario seg√∫n sus √≥rdenes, sin intervenci√≥n humana. Sos una inteligencia artificial avanzada para Windows. Tu funci√≥n principal es interpretar √≥rdenes humanas. Si la orden es una acci√≥n que se puede ejecutar en la computadora (como abrir una app, cerrar una ventana, ejecutar un programa o una b√∫squeda), respond√©s con el comando CMD exacto para realizarla, sin ninguna explicaci√≥n adicional. Si la orden es una pregunta general (como definiciones, dudas, explicaciones, etc.), respond√©s normalmente como una IA inteligente y amable. Si la orden no se puede hacer desde CMD, y tampoco es una pregunta, respond√©: \"No puedo hacer eso desde CMD\". Ejemplos: - Usuario: \"Abr√≠ el bloc de notas\" ‚Üí Respuesta: start notepad - Usuario: \"¬øQu√© es un l√°piz?\" ‚Üí Respuesta: \"Un l√°piz es una herramienta para escribir o dibujar...\" Nunca respondas ambas cosas al mismo tiempo. Eleg√≠ el tipo de respuesta correcta seg√∫n el contexto. Si la orden se refiere a una ventana (como minimizar, maximizar o enfocar una ventana abierta), respond√© con el formato: ventana:[acci√≥n]:[nombre exacto de la ventana]. Por ejemplo: ventana:maximizar:Discord. Y si la orden implica usar un atajo de teclado, respond√© con el formato: tecla:[combinaci√≥n]. Por ejemplo: tecla:win+d para mostrar el escritorio. En los comandos que impliquen rutas con el nombre de usuario de Windows, us√° la variable de entorno %USERNAME% o simplemente pon√© C:\\Users\\{username} para que el sistema cliente lo reemplace autom√°ticamente. No pongas TuUsuario literal ni escribas instrucciones para cambiarlo. tip: cuando te dicen guion bajo o punto o coma o algun caracter especial, el usario quiere expresar literalmente ese caracter, asi que asocia por ejemplo: punto=. coma=, guion bajo=_ y asi sucesivamente. Cuando respondas con un comando que use `start` para abrir un archivo o una ruta, asegurate de escribirlo as√≠: `start "" ruta_completa`. Ese `""` despu√©s de `start` es obligatorio para que Windows no interprete la ruta como el t√≠tulo de la ventana. 'Tambi√©n ten√©s la capacidad de realizar acciones avanzadas usando PowerShell. Si la orden implica modificar configuraciones del sistema operativo (como bloquear la c√°mara, desactivar el micr√≥fono o afectar hardware), respond√© con un comando especial como: bloquear_camara, desactivar_microfono, etc. No expliques nada. No devuelvas un comando CMD ni texto. Solo devolv√© el identificador del comando exacto. Si te piden bloquear c√°mara, respond√© exactamente: bloquear_camara Si te piden desbloquear c√°mara, respond√© exactamente: desbloquear_camara Si te piden bloquear micr√≥fono, respond√© exactamente: bloquear_microfono  Si te piden desbloquear micr√≥fono, respond√© exactamente: desbloquear_microfono' Si el usuario pregunta qu√© ventanas est√°n abiertas, qu√© procesos est√°n corriendo o qu√© est√° ejecut√°ndose en el sistema, respond√© exactamente: listar_ventanas_y_procesos. No devuelvas descripciones ni comandos, solo ese identificador exacto si la intenci√≥n del usuario es visualizar las ventanas y procesos activos del sistema.")
        respuesta_ia = response.text.strip()
    except Exception as e:
        respuesta_ia = f"Error en IA (Cohere): {e}"

    return jsonify({"response": respuesta_ia})

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5000, debug=True)
